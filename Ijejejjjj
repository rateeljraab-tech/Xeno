-- XENO HUB ADVANCED UI LIBRARY FINAL CUSTOM UI + PROFESSIONAL SLIDER + MAKE WINDOW + SLIDER + DIALOG + CONFIRM UI (NO RAINBOW)
-- Made by: xeno999 | Enhanced: White borders, Dialog, Confirm, No Rainbow

local player = game.Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "XenoHubUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = gui

-------------
-- WHITE STROKE FOR UI (REPLACES RAINBOW)
-------------
local function whiteStroke(stroke, thickness, transparency)
	stroke.Color = Color3.fromRGB(255,255,255)
	stroke.Thickness = thickness or 2
	stroke.Transparency = transparency or 0.09
end

-------------
-- MAKE WINDOW API
-------------
local windowConfig = {
	Title = "XENO HUB | ",
	SubTitle = "BUILD A PLANE",
	Author = "by : xeno999",
	Yellow = Color3.fromRGB(255, 216, 53),
	FrameBG = Color3.fromRGB(18, 24, 34),
	TabText = Color3.fromRGB(255,255,255),
	TabSelectedBG = Color3.fromRGB(22, 52, 109),
	TabSelectedStroke = Color3.fromRGB(24, 133, 255),
	TabSelectedStrokeTransparency = 0.4,
}

function makeWindow(title, subtitle, author)
	windowConfig.Title = title or windowConfig.Title
	windowConfig.SubTitle = subtitle or windowConfig.SubTitle
	windowConfig.Author = author or windowConfig.Author

	if _G.xeno_title then _G.xeno_title.Text = windowConfig.Title end
	if _G.xeno_subtitle then _G.xeno_subtitle.Text = windowConfig.SubTitle end
	if _G.xeno_author then _G.xeno_author.Text = windowConfig.Author end
end

-------------
-- MAKE INTRO API
-------------
function makeIntro(introTextStr)
	local introFrame = Instance.new("Frame")
	introFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	introFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	introFrame.Size = UDim2.new(0, 0, 0, 0)
	introFrame.BackgroundColor3 = windowConfig.FrameBG
	introFrame.BackgroundTransparency = 0
	introFrame.ZIndex = 20
	introFrame.Parent = screenGui

	local introCorner = Instance.new("UICorner", introFrame)
	introCorner.CornerRadius = UDim.new(0, 12)
	local introStroke = Instance.new("UIStroke", introFrame)
	whiteStroke(introStroke, 2, 0.07)

	local introText = Instance.new("TextLabel", introFrame)
	introText.AnchorPoint = Vector2.new(0.5, 0.5)
	introText.Position = UDim2.new(0.5, 0, 0.5, 0)
	introText.Size = UDim2.new(1, -18, 1, -18)
	introText.BackgroundTransparency = 1
	introText.Text = introTextStr or "XENO HUB"
	introText.TextColor3 = windowConfig.Yellow
	introText.TextStrokeTransparency = 0.6
	introText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	introText.Font = Enum.Font.GothamBlack
	introText.TextScaled = true
	introText.ZIndex = 21

	local introShowW = 360
	local introShowH = 70

	introFrame.Size = UDim2.new(0, 0, 0, introShowH)
	introFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	introFrame.Visible = true
	introFrame:TweenSize(UDim2.new(0, introShowW, 0, introShowH), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.35, true)
	introFrame:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.35, true)
	wait(0.42)
	wait(2.7)
	local outAnimTime = 0.42
	spawn(function()
		introFrame:TweenPosition(UDim2.new(0, -introShowW, 0.5, 0), Enum.EasingDirection.In, Enum.EasingStyle.Exponential, outAnimTime, true)
		introFrame:TweenSize(UDim2.new(0, 0, 0, introShowH), Enum.EasingDirection.In, Enum.EasingStyle.Back, outAnimTime, true)
		introText.TextTransparency = 1
	end)
	wait(outAnimTime + 0.13)
	introFrame:Destroy()
end

-------------
-- MAIN FRAME
-------------
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 38, 0, 38)
toggleBtn.Position = UDim2.new(0, 10, 0.5, -19)
toggleBtn.BackgroundColor3 = Color3.fromRGB(16, 16, 32)
toggleBtn.Text = "XENO"
toggleBtn.TextColor3 = windowConfig.Yellow
toggleBtn.Font = Enum.Font.GothamBlack
toggleBtn.TextSize = 13
toggleBtn.Active = true
toggleBtn.BorderSizePixel = 0
toggleBtn.Parent = screenGui
local btnCorner = Instance.new("UICorner", toggleBtn)
btnCorner.CornerRadius = UDim.new(0, 7)
local btnStroke = Instance.new("UIStroke", toggleBtn)
whiteStroke(btnStroke, 2, 0.2)

local function makeDraggable(frame)
	local dragging, dragInput, mousePos, framePos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			mousePos = input.Position
			framePos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - mousePos
			frame.Position = UDim2.new(
				framePos.X.Scale,
				framePos.X.Offset + delta.X,
				framePos.Y.Scale,
				framePos.Y.Offset + delta.Y
			)
		end
	end)
end
makeDraggable(toggleBtn)

local mainFrame = Instance.new("Frame")
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.Size = UDim2.new(0, 560, 0, 350)
mainFrame.BackgroundColor3 = windowConfig.FrameBG
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui
local uicorner = Instance.new("UICorner", mainFrame)
uicorner.CornerRadius = UDim.new(0, 11)
local mainStroke = Instance.new("UIStroke", mainFrame)
whiteStroke(mainStroke, 3, 0.07)
makeDraggable(mainFrame)

-------------
-- FADE/ANIMATION
-------------
local function fadeIn(frame, duration)
	frame.Visible = true
	frame.BackgroundTransparency = 1
	for i = 1, 10 do
		frame.BackgroundTransparency = 1 - (i/10)
		wait(duration/10)
	end
	frame.BackgroundTransparency = 0
end
local function fadeOut(frame, duration, callback)
	for i = 1, 10 do
		frame.BackgroundTransparency = (i/10)
		wait(duration/10)
	end
	frame.Visible = false
	if callback then callback() end
end
local function closeAnimation()
	local t = 0.23
	mainFrame:TweenSize(UDim2.new(0,0,0,0), Enum.EasingDirection.In, Enum.EasingStyle.Back, t, true)
	wait(t)
	mainFrame.Visible = false
end

-------------
-- BLUR EFFECT (for confirm dialog)
-------------
local blur = nil
local function showBlur()
	if not blur then
		blur = Instance.new("BlurEffect", game:GetService("Lighting"))
		blur.Size = 24
		blur.Name = "XenoHubBlur"
	end
end
local function hideBlur()
	if blur then
		blur:Destroy()
		blur = nil
	end
end

-------------
-- NOTIFY
-------------
local function notify(text, color)
	local notif = Instance.new("TextLabel")
	notif.AnchorPoint = Vector2.new(0.5, 0)
	notif.Position = UDim2.new(0.5, 0, 0, 10)
	notif.Size = UDim2.new(0, 350, 0, 40)
	notif.BackgroundColor3 = color or windowConfig.Yellow
	notif.Text = text
	notif.TextColor3 = Color3.fromRGB(0, 0, 0)
	notif.Font = Enum.Font.GothamBold
	notif.TextSize = 18
	notif.BackgroundTransparency = 0.1
	notif.Parent = screenGui
	Instance.new("UICorner", notif).CornerRadius = UDim.new(0, 8)
	notif.TextStrokeTransparency = 0.6
	notif.ZIndex = 100
	local notifStroke = Instance.new("UIStroke", notif)
	whiteStroke(notifStroke, 2)
	notif.Position = UDim2.new(0.5, 0, 0, -50)
	notif:TweenPosition(UDim2.new(0.5, 0, 0, 10), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
	wait(1.8)
	notif:TweenPosition(UDim2.new(0.5, 0, 0, -50), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 0.4, true)
	wait(0.4)
	notif:Destroy()
end

-------------
-- TITLE & SUBTITLE & AUTHOR
-------------
local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(0, 300, 0, 40)
title.Position = UDim2.new(0, 18, 0, 0)
title.BackgroundTransparency = 1
title.Text = windowConfig.Title
title.TextColor3 = windowConfig.Yellow
title.TextXAlignment = Enum.TextXAlignment.Left
title.Font = Enum.Font.GothamBlack
title.TextSize = 22
_G.xeno_title = title

local title2 = Instance.new("TextLabel", mainFrame)
title2.Size = UDim2.new(0, 150, 0, 40)
title2.Position = UDim2.new(0, 137, 0, 0)
title2.BackgroundTransparency = 1
title2.Text = windowConfig.SubTitle
title2.TextColor3 = windowConfig.Yellow
title2.TextXAlignment = Enum.TextXAlignment.Left
title2.Font = Enum.Font.GothamBlack
title2.TextSize = 21
_G.xeno_subtitle = title2

local subtitle = Instance.new("TextLabel", mainFrame)
subtitle.Size = UDim2.new(1, -90, 0, 20)
subtitle.Position = UDim2.new(0, 18, 0, 27)
subtitle.BackgroundTransparency = 1
subtitle.Text = windowConfig.Author
subtitle.TextColor3 = windowConfig.Yellow
subtitle.TextXAlignment = Enum.TextXAlignment.Left
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 14
_G.xeno_author = subtitle

-------------
-- CLOSE & MINIMIZE BUTTONS + Confirm Dialog
-------------
local confirmDialog = nil
local function showConfirmDialog(onYes, onNo)
	if confirmDialog then confirmDialog:Destroy() end
	showBlur()

	confirmDialog = Instance.new("Frame")
	confirmDialog.AnchorPoint = Vector2.new(0.5, 0.5)
	confirmDialog.Position = UDim2.new(0.5, 0, 0.5, 0)
	confirmDialog.Size = UDim2.new(0, 0, 0, 0)
	confirmDialog.BackgroundColor3 = windowConfig.FrameBG
	confirmDialog.BackgroundTransparency = 0
	confirmDialog.ZIndex = 999
	confirmDialog.Parent = screenGui
	Instance.new("UICorner", confirmDialog).CornerRadius = UDim.new(0, 14)
	local stroke = Instance.new("UIStroke", confirmDialog)
	whiteStroke(stroke, 2)

	-- Title
	local titleLbl = Instance.new("TextLabel", confirmDialog)
	titleLbl.Size = UDim2.new(1, -30, 0, 38)
	titleLbl.Position = UDim2.new(0, 15, 0, 11)
	titleLbl.BackgroundTransparency = 1
	titleLbl.Text = "XG4 HUB SCRIPTS"
	titleLbl.TextColor3 = windowConfig.Yellow
	titleLbl.Font = Enum.Font.GothamBlack
	titleLbl.TextSize = 22
	titleLbl.TextXAlignment = Enum.TextXAlignment.Left
	titleLbl.ZIndex = 1000

	-- Separator
	local sep = Instance.new("Frame", confirmDialog)
	sep.Size = UDim2.new(1, -40, 0, 2)
	sep.Position = UDim2.new(0, 20, 0, 54)
	sep.BackgroundColor3 = Color3.fromRGB(255,255,255)
	sep.BorderSizePixel = 0
	sep.ZIndex = 1000

	-- Main Text
	local txt = Instance.new("TextLabel", confirmDialog)
	txt.Size = UDim2.new(1, -40, 0, 52)
	txt.Position = UDim2.new(0, 20, 0, 62)
	txt.BackgroundTransparency = 1
	txt.Text = "ARE YOU SURE YOU WANT TO CLOSE XG4 HUB SCRIPTS NOW?"
	txt.TextColor3 = windowConfig.Yellow
	txt.Font = Enum.Font.GothamBold
	txt.TextSize = 16
	txt.TextWrapped = true
	txt.TextXAlignment = Enum.TextXAlignment.Left
	txt.TextYAlignment = Enum.TextYAlignment.Top
	txt.ZIndex = 1000

	-- YES Button
	local yesBtn = Instance.new("TextButton", confirmDialog)
	yesBtn.Size = UDim2.new(0.45, -9, 0, 38)
	yesBtn.Position = UDim2.new(0.05, 0, 1, -53)
	yesBtn.BackgroundColor3 = Color3.fromRGB(215, 36, 36)
	yesBtn.TextColor3 = Color3.fromRGB(255,255,255)
	yesBtn.Text = "YES"
	yesBtn.Font = Enum.Font.GothamBold
	yesBtn.TextSize = 18
	yesBtn.ZIndex = 1000
	Instance.new("UICorner", yesBtn).CornerRadius = UDim.new(0, 7)

	-- NO Button
	local noBtn = Instance.new("TextButton", confirmDialog)
	noBtn.Size = UDim2.new(0.45, -9, 0, 38)
	noBtn.Position = UDim2.new(0.5, 18, 1, -53)
	noBtn.BackgroundColor3 = Color3.fromRGB(31, 87, 239)
	noBtn.TextColor3 = Color3.fromRGB(255,255,255)
	noBtn.Text = "NO"
	noBtn.Font = Enum.Font.GothamBold
	noBtn.TextSize = 18
	noBtn.ZIndex = 1000
	Instance.new("UICorner", noBtn).CornerRadius = UDim.new(0, 7)

	-- Animation In
	confirmDialog.Visible = true
	confirmDialog.Size = UDim2.new(0, 0, 0, 0)
	confirmDialog:TweenSize(UDim2.new(0, 420, 0, 182), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.27, true)

	noBtn.MouseButton1Click:Connect(function()
		confirmDialog:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 0.19, true)
		wait(0.19)
		confirmDialog:Destroy()
		confirmDialog = nil
		hideBlur()
		if onNo then onNo() end
	end)

	yesBtn.MouseButton1Click:Connect(function()
		confirmDialog:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 0.19, true)
		wait(0.19)
		confirmDialog:Destroy()
		confirmDialog = nil
		hideBlur()
		if onYes then onYes() end
	end)
end

local function killUI()
	mainFrame.Visible = false
	toggleBtn.Visible = false
	hideBlur()
	if confirmDialog then confirmDialog:Destroy() end
end

local closeBtn = Instance.new("TextButton", mainFrame)
closeBtn.Size = UDim2.new(0, 40, 0, 40)
closeBtn.Position = UDim2.new(1, -45, 0, 0)
closeBtn.Text = "X"
closeBtn.TextColor3 = windowConfig.Yellow
closeBtn.BackgroundTransparency = 1
closeBtn.Font = Enum.Font.GothamBlack
closeBtn.TextSize = 23
closeBtn.MouseButton1Click:Connect(function()
	showConfirmDialog(
		function() -- YES
			closeAnimation()
			wait(0.22)
			killUI()
		end,
		function() -- NO
		end
	)
end)

local minBtn = Instance.new("TextButton", mainFrame)
minBtn.Size = UDim2.new(0, 40, 0, 40)
minBtn.Position = UDim2.new(1, -90, 0, 0)
minBtn.Text = "-"
minBtn.TextColor3 = windowConfig.Yellow
minBtn.BackgroundTransparency = 1
minBtn.Font = Enum.Font.GothamBold
minBtn.TextSize = 22
local minimized = false
local lastSize = mainFrame.Size
minBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		lastSize = mainFrame.Size
		local t = 0.22
		mainFrame:TweenSize(UDim2.new(0, 560, 0, 49), Enum.EasingDirection.Out, Enum.EasingStyle.Back, t, true)
		for _, child in ipairs(mainFrame:GetChildren()) do
			if child:IsA("Frame") or child:IsA("ScrollingFrame") then child.Visible = false end
		end
		minBtn.Text = "+"
	else
		local t = 0.22
		mainFrame:TweenSize(UDim2.new(0, 560, 0, 350), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, t, true)
		wait(t*0.8)
		for _, child in ipairs(mainFrame:GetChildren()) do
			if child:IsA("Frame") or child:IsA("ScrollingFrame") then child.Visible = true end
		end
		minBtn.Text = "-"
	end
end)

-------------
-- TABS CONTAINER
-------------
local tabContainer = Instance.new("ScrollingFrame", mainFrame)
tabContainer.Size = UDim2.new(0, 120, 1, -52)
tabContainer.Position = UDim2.new(0, 0, 0, 50)
tabContainer.BackgroundColor3 = Color3.fromRGB(13, 35, 62)
tabContainer.BackgroundTransparency = 0.05
tabContainer.ScrollBarThickness = 6
tabContainer.AutomaticCanvasSize = Enum.AutomaticSize.Y
tabContainer.CanvasSize = UDim2.new(0, 0, 50, 0)
tabContainer.VerticalScrollBarInset = Enum.ScrollBarInset.Always
local tabList = Instance.new("UIListLayout", tabContainer)
tabList.Padding = UDim.new(0, 7)
tabList.SortOrder = Enum.SortOrder.LayoutOrder

-------------
-- PAGES CONTAINER
-------------
local pagesContainer = Instance.new("ScrollingFrame", mainFrame)
pagesContainer.Size = UDim2.new(1, -142, 1, -62)
pagesContainer.Position = UDim2.new(0, 132, 0, 52)
pagesContainer.BackgroundTransparency = 1
pagesContainer.ScrollBarThickness = 8
pagesContainer.AutomaticCanvasSize = Enum.AutomaticSize.Y
pagesContainer.CanvasSize = UDim2.new(0, 0, 50, 0)
pagesContainer.VerticalScrollBarInset = Enum.ScrollBarInset.Always

local tabs = {}
local selectedTab = nil

-------------
-- CREATE TAB (WHITE BORDERS)
-------------
function createTab(name, iconText)
	local tabBtn = Instance.new("TextButton", tabContainer)
	local txtLen = utf8.len(name) or #name
	local btnW = math.clamp(75 + (txtLen-3)*9, 115, 185)
	tabBtn.Size = UDim2.new(0, btnW, 0, 36)
	tabBtn.BackgroundColor3 = Color3.fromRGB(27, 44, 74)
	tabBtn.Text = ""
	tabBtn.TextColor3 = windowConfig.TabText
	tabBtn.Font = Enum.Font.GothamBold
	tabBtn.TextSize = 16
	Instance.new("UICorner", tabBtn).CornerRadius = UDim.new(0, 6)
	local tabStroke = Instance.new("UIStroke", tabBtn)
	whiteStroke(tabStroke, 2, 0.13)

	local sep = Instance.new("TextLabel", tabBtn)
	sep.Size = UDim2.new(0, 10, 1, 0)
	sep.Position = UDim2.new(1, -10, 0, 0)
	sep.BackgroundTransparency = 1
	sep.Text = "|"
	sep.TextColor3 = windowConfig.TabText
	sep.Font = Enum.Font.GothamBold
	sep.TextSize = 18
	sep.TextXAlignment = Enum.TextXAlignment.Right

	local iconBox = Instance.new("Frame", tabBtn)
	iconBox.Size = UDim2.new(0, 32, 0, 32)
	iconBox.Position = UDim2.new(0, 3, 0.5, -16)
	iconBox.BackgroundColor3 = windowConfig.Yellow
	Instance.new("UICorner", iconBox).CornerRadius = UDim.new(0, 7)
	local iconLbl = Instance.new("TextLabel", iconBox)
	iconLbl.Size = UDim2.new(1, 0, 1, 0)
	iconLbl.Position = UDim2.new(0, 0, 0, 0)
	iconLbl.BackgroundTransparency = 1
	iconLbl.Text = iconText or "XN"
	iconLbl.Font = Enum.Font.GothamBlack
	iconLbl.TextSize = 17
	iconLbl.TextColor3 = Color3.fromRGB(0,0,0)

	local lbl = Instance.new("TextLabel", tabBtn)
	lbl.Size = UDim2.new(1, -52, 1, 0)
	lbl.Position = UDim2.new(0, 40, 0, 0)
	lbl.BackgroundTransparency = 1
	lbl.Text = name
	lbl.TextColor3 = windowConfig.TabText
	lbl.Font = Enum.Font.GothamBold
	lbl.TextSize = 16
	lbl.TextXAlignment = Enum.TextXAlignment.Left

	local page = Instance.new("Frame", pagesContainer)
	page.Size = UDim2.new(1, 0, 0, 0)
	page.Visible = false
	page.BackgroundTransparency = 1
	page.AutomaticSize = Enum.AutomaticSize.Y

	local list = Instance.new("UIListLayout", page)
	list.Padding = UDim.new(0, 21)
	list.SortOrder = Enum.SortOrder.LayoutOrder

	tabBtn.MouseButton1Click:Connect(function()
		for i, t in ipairs(tabs) do
			t.page.Visible = false
			t.button.BackgroundColor3 = Color3.fromRGB(27, 44, 74)
			t.stroke.Transparency = 0.13
			if t.selectedStroke then t.selectedStroke:Destroy() end
			t.lbl.TextColor3 = windowConfig.TabText
		end
		page.Visible = true
		tabBtn.BackgroundColor3 = windowConfig.TabSelectedBG
		lbl.TextColor3 = windowConfig.TabText
		tabStroke.Transparency = 1
		local selectedStroke = Instance.new("UIStroke", tabBtn)
		selectedStroke.Color = windowConfig.TabSelectedStroke
		selectedStroke.Thickness = 2.5
		selectedStroke.Transparency = windowConfig.TabSelectedStrokeTransparency
		selectedStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
		tabs[#tabs].selectedStroke = selectedStroke
		selectedTab = { button = tabBtn, page = page, stroke = tabStroke, selectedStroke = selectedStroke, lbl = lbl }
	end)

	table.insert(tabs, { button = tabBtn, page = page, stroke = tabStroke, lbl = lbl })
	return page
end

-------------
-- UI Controls (Slider/Button/Etc)
-------------
function createExampleBox(parent, contentBuilder)
	local box = Instance.new("Frame", parent)
	box.Size = UDim2.new(1, -20, 0, 70)
	box.BackgroundColor3 = windowConfig.FrameBG
	box.BackgroundTransparency = 0
	box.BorderSizePixel = 0
	box.AutomaticSize = Enum.AutomaticSize.Y
	local border = Instance.new("UIStroke", box)
	whiteStroke(border, 2, 0.08)
	local corner = Instance.new("UICorner", box)
	corner.CornerRadius = UDim.new(0, 8)
	local padding = Instance.new("UIPadding", box)
	padding.PaddingLeft = UDim.new(0, 14)
	padding.PaddingTop = UDim.new(0, 8)
	padding.PaddingRight = UDim.new(0, 14)
	padding.PaddingBottom = UDim.new(0, 8)
	if contentBuilder then
		contentBuilder(box)
	end
	return box
end
function createButton(parent, text, callback)
	return createExampleBox(parent, function(box)
		local btn = Instance.new("TextButton", box)
		btn.Size = UDim2.new(1, 0, 0, 39)
		btn.BackgroundColor3 = windowConfig.Yellow
		btn.TextColor3 = Color3.fromRGB(0,0,0)
		btn.Text = text
		btn.Font = Enum.Font.GothamBold
		btn.TextSize = 17
		btn.AutoButtonColor = true
		Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 7)
		local btnStroke = Instance.new("UIStroke", btn)
		whiteStroke(btnStroke, 2)
		btn.MouseButton1Click:Connect(function()
			if callback then callback() end
		end)
	end)
end
function createTextLabel(parent, text)
	return createExampleBox(parent, function(box)
		local lbl = Instance.new("TextLabel", box)
		lbl.Size = UDim2.new(1, 0, 0, 30)
		lbl.BackgroundTransparency = 1
		lbl.TextColor3 = windowConfig.Yellow
		lbl.Text = text
		lbl.Font = Enum.Font.Gotham
		lbl.TextSize = 16
		lbl.TextXAlignment = Enum.TextXAlignment.Left
		lbl.TextWrapped = true
	end)
end
function createParagraph(parent, text)
	return createExampleBox(parent, function(box)
		local lbl = Instance.new("TextLabel", box)
		lbl.Size = UDim2.new(1, 0, 0, 0)
		lbl.BackgroundTransparency = 1
		lbl.TextColor3 = windowConfig.Yellow
		lbl.Text = text
		lbl.Font = Enum.Font.Gotham
		lbl.TextSize = 15
		lbl.TextXAlignment = Enum.TextXAlignment.Left
		lbl.TextWrapped = true
		lbl.AutomaticSize = Enum.AutomaticSize.Y
	end)
end
function createSection(parent, text)
	local lbl = Instance.new("TextLabel", parent)
	lbl.Size = UDim2.new(1, -10, 0, 26)
	lbl.BackgroundTransparency = 1
	lbl.TextColor3 = windowConfig.Yellow
	lbl.Text = " " .. text
	lbl.Font = Enum.Font.GothamBold
	lbl.TextSize = 17
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	return lbl
end
function createTextBox(parent, placeholder, callback)
	return createExampleBox(parent, function(box)
		local boxx = Instance.new("TextBox", box)
		boxx.Size = UDim2.new(1, 0, 0, 36)
		boxx.BackgroundColor3 = Color3.fromRGB(21, 24, 32)
		boxx.TextColor3 = windowConfig.Yellow
		boxx.PlaceholderText = placeholder or "Enter..."
		boxx.Font = Enum.Font.Gotham
		boxx.TextSize = 16
		Instance.new("UICorner", boxx).CornerRadius = UDim.new(0, 6)
		local boxStroke = Instance.new("UIStroke", boxx)
		whiteStroke(boxStroke, 2)
		boxx.FocusLost:Connect(function(enter)
			if enter and callback then
				callback(boxx.Text)
			end
		end)
	end)
end

function createDropdown(parent, options, defaultIndex, callback)
	return createExampleBox(parent, function(box)
		local btn = Instance.new("TextButton", box)
		btn.Size = UDim2.new(1, 0, 0, 36)
		btn.BackgroundColor3 = Color3.fromRGB(21, 24, 32)
		btn.TextColor3 = windowConfig.Yellow
		btn.Font = Enum.Font.Gotham
		btn.TextSize = 16
		Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
		local btnStroke = Instance.new("UIStroke", btn)
		whiteStroke(btnStroke, 2)
		local selected = options[defaultIndex or 1] or options[1]
		btn.Text = selected
		local open = false
		local dropFrame = Instance.new("ScrollingFrame", box)
		dropFrame.Position = UDim2.new(0,0,1,2)
		dropFrame.Size = UDim2.new(1, 0, 0, math.min(#options, 7)*32)
		dropFrame.BackgroundColor3 = Color3.fromRGB(18, 24, 34)
		dropFrame.Visible = false
		Instance.new("UICorner", dropFrame).CornerRadius = UDim.new(0, 6)
		dropFrame.ZIndex = 20
		dropFrame.ScrollBarThickness = 6
		dropFrame.CanvasSize = UDim2.new(0,0,0,math.max(#options*34, 200))
		dropFrame.AutomaticCanvasSize = Enum.AutomaticSize.None
		dropFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
		local dropList = Instance.new("UIListLayout", dropFrame)
		dropList.Padding = UDim.new(0,0)
		dropList.SortOrder = Enum.SortOrder.LayoutOrder
		local optBtns = {}
		for i, opt in ipairs(options) do
			local optBtn = Instance.new("TextButton", dropFrame)
			optBtn.Size = UDim2.new(1, 0, 0, 32)
			optBtn.BackgroundTransparency = 1
			optBtn.Text = opt
			optBtn.TextColor3 = windowConfig.Yellow
			optBtn.Font = Enum.Font.Gotham
			optBtn.TextSize = 15
			optBtn.ZIndex = 21
			local optStroke = Instance.new("UIStroke", optBtn)
			whiteStroke(optStroke, 2)
			optBtns[i] = { btn = optBtn, stroke = optStroke }
			optBtn.MouseButton1Click:Connect(function()
				selected = opt
				btn.Text = opt
				dropFrame.Visible = false
				open = false
				for j, o in ipairs(optBtns) do
					if o.btn == optBtn then
						o.stroke.Color = windowConfig.TabSelectedStroke
						o.stroke.Transparency = windowConfig.TabSelectedStrokeTransparency
					else
						o.stroke.Transparency = 1
					end
				end
				if callback then callback(opt) end
			end)
		end
		btn.MouseButton1Click:Connect(function()
			open = not open
			dropFrame.Visible = open
			for j, o in ipairs(optBtns) do
				if options[j] == selected then
					o.stroke.Color = windowConfig.TabSelectedStroke
					o.stroke.Transparency = windowConfig.TabSelectedStrokeTransparency
				else
					o.stroke.Transparency = 1
				end
			end
		end)
	end)
end

function createToggle(parent, text, default, callback)
	return createExampleBox(parent, function(box)
		local label = Instance.new("TextLabel", box)
		label.Size = UDim2.new(0.55, 0, 1, 0)
		label.Position = UDim2.new(0, 0, 0, 0)
		label.BackgroundTransparency = 1
		label.Text = text
		label.TextColor3 = windowConfig.Yellow
		label.Font = Enum.Font.Gotham
		label.TextSize = 16
		label.TextXAlignment = Enum.TextXAlignment.Left
		local toggleBtn = Instance.new("TextButton", box)
		toggleBtn.Size = UDim2.new(0, 54, 0, 26)
		toggleBtn.Position = UDim2.new(1, -64, 0.5, -13)
		toggleBtn.BackgroundColor3 = default and windowConfig.Yellow or Color3.fromRGB(80,80,90)
		toggleBtn.Text = ""
		toggleBtn.AutoButtonColor = false
		Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(1,0)
		local toggleStroke = Instance.new("UIStroke", toggleBtn)
		whiteStroke(toggleStroke, 2)
		local circle = Instance.new("Frame", toggleBtn)
		circle.Size = UDim2.new(0, 22, 0, 22)
		circle.Position = default and UDim2.new(1, -24, 0.5, -11) or UDim2.new(0, 2, 0.5, -11)
		circle.BackgroundColor3 = Color3.fromRGB(255,255,255)
		Instance.new("UICorner", circle).CornerRadius = UDim.new(1,0)
		circle.ZIndex = 2
		local state = default
		local function updateSwitch(animated)
			if state then
				toggleBtn.BackgroundColor3 = windowConfig.Yellow
				if animated then
					circle:TweenPosition(UDim2.new(1, -24, 0.5, -11), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.13, true)
				else
					circle.Position = UDim2.new(1, -24, 0.5, -11)
				end
			else
				toggleBtn.BackgroundColor3 = Color3.fromRGB(80,80,90)
				if animated then
					circle:TweenPosition(UDim2.new(0, 2, 0.5, -11), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.13, true)
				else
					circle.Position = UDim2.new(0, 2, 0.5, -11)
				end
			end
		end
		toggleBtn.MouseButton1Click:Connect(function()
			state = not state
			updateSwitch(true)
			if callback then callback(state) end
		end)
		updateSwitch(false)
	end)
end

function createSlider(parent, label, min, max, defaultValue, callback)
	return createExampleBox(parent, function(box)
		local labelObj = Instance.new("TextLabel", box)
		labelObj.Size = UDim2.new(1, 0, 0, 23)
		labelObj.BackgroundTransparency = 1
		labelObj.TextColor3 = windowConfig.Yellow
		labelObj.Text = label or "Slider"
		labelObj.Font = Enum.Font.Gotham
		labelObj.TextSize = 15
		labelObj.TextXAlignment = Enum.TextXAlignment.Left

		local sliderBar = Instance.new("Frame", box)
		sliderBar.Size = UDim2.new(1, -10, 0, 12)
		sliderBar.Position = UDim2.new(0, 0, 0, 30)
		sliderBar.BackgroundColor3 = Color3.fromRGB(34, 40, 54)
		sliderBar.BorderSizePixel = 0
		Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(1, 0)
		local barStroke = Instance.new("UIStroke", sliderBar)
		whiteStroke(barStroke, 1.25, 0.08)

		local fill = Instance.new("Frame", sliderBar)
		fill.Size = UDim2.new((defaultValue-min)/(max-min), 0, 1, 0)
		fill.BackgroundColor3 = windowConfig.Yellow
		fill.BorderSizePixel = 0
		fill.ZIndex = 2
		Instance.new("UICorner", fill).CornerRadius = UDim.new(1, 0)

		local knob = Instance.new("Frame", sliderBar)
		knob.Size = UDim2.new(0, 18, 0, 18)
		knob.Position = UDim2.new((defaultValue-min)/(max-min), -9, 0.5, -9)
		knob.BackgroundColor3 = windowConfig.Yellow
		knob.ZIndex = 3
		Instance.new("UICorner", knob).CornerRadius = UDim.new(1, 0)
		local knobStroke = Instance.new("UIStroke", knob)
		whiteStroke(knobStroke, 1.5, 0.15)

		local valueLabel = Instance.new("TextLabel", box)
		valueLabel.Size = UDim2.new(0, 52, 0, 21)
		valueLabel.Position = UDim2.new(1, -52, 0, 0)
		valueLabel.BackgroundTransparency = 1
		valueLabel.TextColor3 = windowConfig.Yellow
		valueLabel.Text = tostring(defaultValue)
		valueLabel.Font = Enum.Font.GothamBold
		valueLabel.TextSize = 16
		valueLabel.TextXAlignment = Enum.TextXAlignment.Right

		local dragging = false
		local value = defaultValue

		local function setValue(v, fireCallback)
			v = math.clamp(math.floor(v + 0.5), min, max)
			value = v
			local percent = (v - min) / (max - min)
			fill.Size = UDim2.new(percent, 0, 1, 0)
			knob.Position = UDim2.new(percent, -9, 0.5, -9)
			valueLabel.Text = tostring(v)
			if fireCallback and callback then callback(v) end
		end

		local userInput = game:GetService("UserInputService")
		local function getBarValue(x)
			local rel = x - sliderBar.AbsolutePosition.X
			local percent = math.clamp(rel / sliderBar.AbsoluteSize.X, 0, 1)
			return math.floor((min + (max-min)*percent)+0.5)
		end
		sliderBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				local v = getBarValue(input.Position.X)
				setValue(v, true)
			end
		end)
		knob.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
			end
		end)
		userInput.InputChanged:Connect(function(input)
			if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				local v = getBarValue(input.Position.X)
				setValue(v, true)
			end
		end)
		userInput.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = false
			end
		end)
		setValue(defaultValue, false)
	end)
end

-------------
-- Show UI on toggle with animation (instant show)
-------------
toggleBtn.MouseButton1Click:Connect(function()
	if mainFrame.Visible then
		closeAnimation()
	else
		mainFrame.Size = UDim2.new(0, 0, 0, 0)
		mainFrame.Visible = true
		mainFrame:TweenSize(UDim2.new(0, 560, 0, 350), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.35, true)
	end
end)

-------------
-- DIALOG API
-------------
local dialogFrame = nil
function showDialog(titleText, textText, okCallback)
	if dialogFrame then dialogFrame:Destroy() end

	dialogFrame = Instance.new("Frame")
	dialogFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	dialogFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	dialogFrame.Size = UDim2.new(0, 0, 0, 0)
	dialogFrame.BackgroundColor3 = windowConfig.FrameBG
	dialogFrame.BackgroundTransparency = 0
	dialogFrame.ZIndex = 991
	dialogFrame.Parent = screenGui
	Instance.new("UICorner", dialogFrame).CornerRadius = UDim.new(0, 13)
	local stroke = Instance.new("UIStroke", dialogFrame)
	whiteStroke(stroke, 2)

	local titleLbl = Instance.new("TextLabel", dialogFrame)
	titleLbl.Size = UDim2.new(1, -30, 0, 35)
	titleLbl.Position = UDim2.new(0, 14, 0, 11)
	titleLbl.BackgroundTransparency = 1
	titleLbl.Text = titleText or ""
	titleLbl.TextColor3 = windowConfig.Yellow
	titleLbl.Font = Enum.Font.GothamBlack
	titleLbl.TextSize = 21
	titleLbl.TextXAlignment = Enum.TextXAlignment.Left
	titleLbl.ZIndex = 991

	local txt = Instance.new("TextLabel", dialogFrame)
	txt.Size = UDim2.new(1, -32, 0, 46)
	txt.Position = UDim2.new(0, 16, 0, 49)
	txt.BackgroundTransparency = 1
	txt.Text = textText or ""
	txt.TextColor3 = windowConfig.Yellow
	txt.Font = Enum.Font.Gotham
	txt.TextSize = 16
	txt.TextWrapped = true
	txt.TextXAlignment = Enum.TextXAlignment.Left
	txt.TextYAlignment = Enum.TextYAlignment.Top
	txt.ZIndex = 991

	local okBtn = Instance.new("TextButton", dialogFrame)
	okBtn.Size = UDim2.new(0.7, 0, 0, 36)
	okBtn.Position = UDim2.new(0.15, 0, 1, -48)
	okBtn.BackgroundColor3 = windowConfig.Yellow
	okBtn.TextColor3 = Color3.fromRGB(0,0,0)
	okBtn.Text = "OK"
	okBtn.Font = Enum.Font.GothamBold
	okBtn.TextSize = 17
	okBtn.ZIndex = 991
	Instance.new("UICorner", okBtn).CornerRadius = UDim.new(0, 8)
	local btnStroke = Instance.new("UIStroke", okBtn)
	whiteStroke(btnStroke, 2)

	dialogFrame.Visible = true
	dialogFrame.Size = UDim2.new(0, 0, 0, 0)
	dialogFrame:TweenSize(UDim2.new(0, 360, 0, 140), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.22, true)

	okBtn.MouseButton1Click:Connect(function()
		dialogFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 0.15, true)
		wait(0.15)
		dialogFrame:Destroy()
		dialogFrame = nil
		if okCallback then okCallback() end
	end)
end
